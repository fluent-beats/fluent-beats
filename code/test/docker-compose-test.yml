version: '3.8'

services:
  # global services (with port binding to host)
  fluent-beats:
    image: fluent-beats/fluent-beats:latest
    build: ../.
    ports:
        - "24224:24224/tcp"
        - "8125:8125/udp"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - /var/lib/docker/containers:/var/lib/docker/containers
    networks:
      - fluent
    environment:
        ES_HTTP_HOST_SECRET: /run/secrets/secret.service.es.http_host
        ES_HTTP_PWD_SECRET: /run/secrets/secret.service.es.http_pwd
    secrets:
      - source: secret.service.es.http_host.v1
        target: secret.service.es.http_host
      - source: secret.service.es.http_pwd.v1
        target: secret.service.es.http_pwd

  # replica services (no port binding to host)
  service-a:
      image: fluent-beats/fake-service
      build: ./fake-service
      depends_on:
        - fluent-beats
      networks:
        - fluent
      labels:
        flb_env: "prod"
        flb_service: "service-a"
      environment:
        SERVICE_NAME: "service-a"
      logging:
        driver: fluentd
        options:
          #fluentd-async: 'true'
          labels-regex: "^flb_.*"
          tag: logs

  service-b:
      image: fluent-beats/fake-service
      build: ./fake-service
      depends_on:
        - fluent-beats
      networks:
        - fluent
      labels:
        flb_env: "prod"
        flb_service: "service-b"
      environment:
        SERVICE_NAME: "service-b"
      logging:
        driver: fluentd
        options:
          #fluentd-async: 'true'
          labels-regex: "^flb_.*"
          tag: logs

secrets:
   secret.service.es.http_host.v1:
    file: ./secrets/http_host.txt
   secret.service.es.http_pwd.v1:
    file: ./secrets/http_pwd.txt

networks:
  fluent:
    driver: bridge