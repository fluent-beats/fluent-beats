# (Stdout -> Docker -> Fluentd Driver -> FluentBit -> ElasticSearch)

[INPUT]
    name                    forward
    alias                   logs_docker_input
    tag                     logs
    listen                  0.0.0.0
    port                    24224
    buffer_chunk_size       ${FLB_FORWARD_BUF_CHUNK_SIZE}
    buffer_max_size         ${FLB_FORWARD_BUF_MAX_SIZE}
    mem_buf_limit           ${FLB_MEM_BUF_LIMIT}
    storage.type            filesystem


# ML parsers not in parsers.conf, they are FluentBit components
#   docker -> flb_ml_parser_docker.c
#   java   -> flb_ml_parser_java.c
[FILTER]
    name                    multiline
    alias                   logs_docker_multiline_filter
    match                   logs
    multiline.key_content   log
    multiline.parser        docker,java

# From Microservices perspective logs should be JSON
[FILTER]
    name                    parser
    alias                   logs_docker_parser_filter
    match                   logs
    parser                  docker_log
    key_name                log
    reserve_data            true

[FILTER]
    name                    lua
    alias                   logs_docker_lua_filter
    match                   logs
    script                  logs-ecs.lua
    call                    fluentd_to_ecs

# Elasticsearch -> Index template 'logs'
[OUTPUT]
    name                    es
    alias                   logs_docker_es_output
    match                   logs
    index                   logs-docker.logs-default
    suppress_type_name      on
    tls                     on
    tls.verify              off
    trace_error             off
    host                    ${FLB_ES_HTTP_HOST}
    port                    9243
    http_user               elastic
    http_passwd             ${FLB_ES_HTTP_PASSWD}
    retry_limit             5
    workers                 1
